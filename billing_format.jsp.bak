<%@page import="java.util.Map.Entry"%>
<%@page import="java.util.*"%>
<%@include file="report_header.jsp" %>
<%@page import="java.text.*"%>
<%@ include file="getConnection.jsp"%>
<%!     PreparedStatement pstmt = null;
    ResultSet rs = null;
    int energyMF = 1;
    Double emf = 1.0;
    String data_string2[]=null,data_string3[]=null;
    String sql="";
%>
<%
         Map<String,String> bf_map=new LinkedHashMap<String,String>();
             

    try {
        String meter_sl_no = "";
        String meter_id = "";
        NumberFormat oneDec = new DecimalFormat("#0.0");
        if (request.getParameter("meter_sl_no") == null || request.getParameter("meter_sl_no") == "") {
            meter_sl_no = (String) session.getAttribute("meter_sl_no");
        } else {
            meter_sl_no = request.getParameter("meter_sl_no");
        }
        if (request.getParameter("meter_id") == null || request.getParameter("meter_id") == "") {
            meter_id = (String) session.getAttribute("meter_id");
        } else {
            meter_id = request.getParameter("meter_id");
        }
        session.setAttribute("meter_sl_no", meter_sl_no);
        String stringToReturn = "";
        String fromDate = request.getParameter("esdate").trim();
        String toDate = request.getParameter("eedate").trim();
        System.out.println("meterid  " + meter_sl_no);
        if (energyMF == 1) {
            pstmt = con.prepareStatement("select mf from meter where meter_serial_no='" + meter_sl_no + "'");
            rs = pstmt.executeQuery();
            if (rs.next()) {
                emf = Double.parseDouble(rs.getString("mf"));
            }
        }
        System.out.println("mf for energy---->" + emf);
%>

<%
    pstmt = con.prepareStatement("select * from d3_columns_header where meter_serial_no='" + meter_sl_no + "' and billing_type='b3'");
    rs = pstmt.executeQuery();
    while (rs.next()) {
        data_string2 = rs.getString("billing_columns_header").split(",");
    }
    pstmt = con.prepareStatement("select * from d3_columns_header where meter_serial_no='" + meter_sl_no + "' and billing_type='b5'");
    rs = pstmt.executeQuery();
    while (rs.next()) {
        data_string3 = rs.getString("billing_columns_header").split(",");
    }
%>
    
    <table align="vright" >
         <tr>
             <td  align="center" class="head1">
                 <input type="button" value="Export to excel" onclick="exportExcel('bf_table','Billing_summary.xls')"/>
             </td>
         </tr>
     </table> 
<div style="width:1290px;overflow-x: scroll">
    <table width="1650px" border="0">
        <tr >
            <td colspan="<%=data_string2.length+data_string3.length*2%>" align="center" class="head1">Billing Summary </td>            
        </tr>
    </table>
        <table class="mtable" id="dtable" style="width:1650px !important">
            <thead>
        <tr>
            <td  width="150px" rowspan="2">
                Billing Date
            </td>
            <td  colspan="<%=data_string2.length%>">Main Energy</td>
            <td  colspan="<%=data_string3.length*2%>">Max Demand</td>
        </tr>
        <tr>
            <%
                for (int i = 0; i < data_string2.length; i++) {
            %>
            <td ><%=data_string2[i]%></td>
            <%}
                for (int i = 0; i < data_string3.length; i++) {
            %>
            <td ><%=data_string3[i]%></td>
            <td >Occured Date</td>
            <%}
            
            %>
        </tr>
      </thead>
      <tbody>

    <%
       
        session.setAttribute("meter_sl_no", meter_sl_no);
        System.out.println("meterid---->" + meter_sl_no);

        if (DBUtil.getTargetDB().equals("oracle")) {
            if (!fromDate.equals("") && !toDate.equals("")) {
                sql = "select to_char(b3.d3_time_stamp,'DD-MM-YYYY HH24:MI:SS')"
                        + "billing_date,b3.data_string,b5.data_string,b5.occ_date from d3_b3 b3,d3_b5 b5 where b3.meter_serial_no='" + meter_sl_no + "' and "
                        + "trunc(b3.d3_time_stamp) >= to_date('" + fromDate + "','DD/MM/YYYY')"
                        + " and trunc(b3.d3_time_stamp) <= to_date('" + toDate + "','DD/MM/YYYY')"
                        + " and b3.meter_serial_no=b5.meter_serial_no and b3.d3_time_stamp=b5.d3_time_stamp order by b3.d3_time_stamp desc";
            } else {
                sql = "select to_char(b3.d3_time_stamp,'DD-MM-YYYY HH24:MI:SS')"
                        + "billing_date,b3.data_string,b5.data_string,b5.occ_date from d3_b3 b3,d3_b5 b5 where b3.meter_serial_no='" + meter_sl_no + "'"
                        + " and b3.meter_serial_no=b5.meter_serial_no and b3.d3_time_stamp=b5.d3_time_stamp order by b3.d3_time_stamp desc";
            }
            pstmt = con.prepareStatement(sql);
            System.out.println("sql  " + sql);
        } else if (DBUtil.getTargetDB().equals("mysql")) {
            if (!fromDate.equals("") && !toDate.equals("")) {
                sql = "select date_format(d3_time_stamp,'%d-%m-%Y %H:%i:%s') billing_date,"
                        + "data_string from d3_b3 b3 where meter_serial_no=? and  str_to_date(date_format(b3.d3_time_stamp,'%d/%m/%Y'),'%d/%m/%Y')>= str_to_date('" + fromDate + "','%d/%m/%Y') and str_to_date(date_format(b3.d3_time_stamp,'%d/%m/%Y'),'%d/%m/%Y') <= str_to_date('" + toDate + "','%d/%m/%Y') "
                        + "order by d3_time_stamp desc limit ?,?";
            } else {
                sql = "select date_format(d3_time_stamp,'%d-%m-%Y %H:%i:%s') billing_date,"
                        + "data_string from d3_b3 b3 where meter_serial_no=? order by d3_time_stamp desc limit ?,?";
            }

            pstmt = con.prepareStatement(sql);
            pstmt.setString(1, meter_sl_no);
        }//end else if


        rs = pstmt.executeQuery();

        String dataString = "";
        NumberFormat formatter = new DecimalFormat("#0.000");
        while (rs.next()) {
            if (rs.getString("data_string") != null) {
                bf_map.put(rs.getString(1).split(" ")[0], rs.getString(2)+"@"+rs.getString(3)+"@"+rs.getString(4));
                               }}//while
         for(Entry em:bf_map.entrySet()){
             String value=em.getValue().toString();
                String data_string[] = value.split("@")[0].split(",");
                String md_string[] = value.split("@")[1].split(",");
                String md_occured[] = value.split("@")[2].split(",");
    %>



    <tr>
        <td ><%=em.getKey()%></td>
        <%
            if (energyMF == 1) {
                for (int i = 0; i < data_string.length; i++) {
                    
        %>
        <td  align="right"><%= formatter.format(Double.parseDouble(data_string[i]))%></td>		
        <!--<td  align="right"><%= formatter.format(Double.parseDouble(data_string[i]) * emf)%></td>-->
        <%
            }
        }//if mf is checked(with MF)
        else { // if mf is not checked (without MF)
            for (int i = 0; i < data_string.length; i++) {
                
        %>
        <td  align="right"><%= formatter.format(Double.parseDouble(data_string[i]))%></td>
        <%
                        }
                            
                    } //end of else without MF
                if(md_string.length<=1){
                    %>
                    <td  align="right"></td>
                    <td  align="right"></td>
                    <td  align="right"></td>
                    <td  align="right"></td>
                    <%
                   }
                               else{
                if (energyMF == 1) {
                for (int i = 0; i < md_string.length; i++) {
                    
        %>
        <td  align="right"><%= formatter.format(Double.parseDouble(md_string[i]))%></td>
        <td  align="right"><%= md_occured.length>i?md_occured[i]:""%></td>
        <%--<td  align="right"><%= formatter.format(Double.parseDouble(md_string[i]) * emf)%></td>--%>
        <%
            }
        }//if mf is checked(with MF)
        else { // if mf is not checked (without MF)
            for (int i = 0; i < md_string.length; i++) {
                
        %>
        <td  align="right"><%= formatter.format(Double.parseDouble(md_string[i]))%></td>
        <td  align="right"><%= md_occured[i]%></td>
        <%
                        }
                            
                    } //end of else without MF
                                 }//if md_String      
                        
                }//map for
            
        %>
    </tr>
</tbody>
</table>
</div>    
<%

    } catch (Exception e) {
        out.println("Plz Try Again....");
        e.printStackTrace();

    }
%>


